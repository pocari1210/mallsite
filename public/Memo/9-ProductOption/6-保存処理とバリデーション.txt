


◆ルートの編集◆

ディレクトリ
\routes\web.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  // Product All Route 
  Route::controller(ProductController::class)->group(function () {

    // Product:保存処理のルート
    Route::post('/store/product', 'StoreProduct')
      ->name('store.product');


/////////////////////////////////////////////////////////////////////////////////////////////////

◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\backend\product\product_add.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  ↓↓routeの編集↓↓
  <form id="myForm" method="post" action="{{ route('store.product') }}" enctype="multipart/form-data">
    @csrf

/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Backend\SubCategoryController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  public function StoreProduct(Request $request)
  {
    $image = $request->file('product_thambnail');
    $name_gen = hexdec(uniqid()) . '.' . $image->getClientOriginalExtension();
    Image::make($image)->resize(800, 800)->save('upload/products/thambnail/' . $name_gen);
    $save_url = 'upload/products/thambnail/' . $name_gen;

    $product_id = Product::insertGetId([

      'brand_id' => $request->brand_id,
      'category_id' => $request->category_id,
      'subcategory_id' => $request->subcategory_id,
      'product_name' => $request->product_name,
      'product_slug' => strtolower(str_replace(' ', '-', $request->product_name)),

      'product_code' => $request->product_code,
      'product_qty' => $request->product_qty,
      'product_tags' => $request->product_tags,
      'product_size' => $request->product_size,
      'product_color' => $request->product_color,

      'selling_price' => $request->selling_price,
      'discount_price' => $request->discount_price,
      'short_descp' => $request->short_descp,
      'long_descp' => $request->long_descp,

      'hot_deals' => $request->hot_deals,
      'featured' => $request->featured,
      'special_offer' => $request->special_offer,
      'special_deals' => $request->special_deals,

      'product_thambnail' => $save_url,
      'vendor_id' => $request->vendor_id,
      'status' => 1,
      'created_at' => Carbon::now(),

    ]);

    /// Multiple Image Upload From her //////

    $images = $request->file('multi_img');
    foreach ($images as $img) {
      $make_name = hexdec(uniqid()) . '.' . $img->getClientOriginalExtension();
      Image::make($img)->resize(800, 800)->save('upload/products/multi-image/' . $make_name);
      $uploadPath = 'upload/products/multi-image/' . $make_name;

      MultiImg::insert([
        'product_id' => $product_id,
        'photo_name' => $uploadPath,
        'created_at' => Carbon::now(),
      ]);
    } // end foreach

    /// End Multiple Image Upload From her //////

    $notification = array(
      'message' => 'Product Inserted Successfully',
      'alert-type' => 'success'
    );

    return redirect()->route('all.product')->with($notification);
  } // End Method   


/////////////////////////////////////////////////////////////////////////////////////////////////