
7-Stateの編集と更新と削除処理

◆ルートの編集◆

ディレクトリ
\routes\web.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  // Shipping State All Route 
  Route::controller(ShippingAreaController::class)->group(function () {

    // Stateの編集のルート
    Route::get('/edit/state/{id}', 'EditState')
      ->name('edit.state');

    // Stateの更新処理のルート
    Route::post('/update/state', 'UpdateState')
      ->name('update.state');

    // Stateの削除処理のルート
    Route::get('/delete/state/{id}', 'DeleteState')
      ->name('delete.state');


/////////////////////////////////////////////////////////////////////////////////////////////////

◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\backend\ship\state\state_all.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

    <td> {{ $item['division']['division_name'] }}</td>
    <td> {{ $item['district']['district_name'] }}</td>
    <td> {{ $item->state_name }}</td>
    <td>

      ↓↓routeの編集↓↓
      <a href="{{ route('edit.state',$item->id) }}" class="btn btn-info">Edit</a>
      <a href="{{ route('delete.state',$item->id) }}" class="btn btn-danger" id="delete">Delete</a>
    </td>
  </tr>

/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Backend\ShippingAreaController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  // Stateの編集ページ疎通のコントローラー
  public function EditState($id)
  {
    $division = ShipDivision::orderBy('division_name', 'ASC')->get();
    $district = ShipDistricts::orderBy('district_name', 'ASC')->get();
    $state = ShipState::findOrFail($id);
    return view('backend.ship.state.state_edit', compact('division', 'district', 'state'));
  } // End Method 


  // Stateの更新処理のコントローラー
  public function UpdateState(Request $request)
  {
    $state_id = $request->id;

    ShipState::findOrFail($state_id)->update([
      'division_id' => $request->division_id,
      'district_id' => $request->district_id,
      'state_name' => $request->state_name,
    ]);

    $notification = array(
      'message' => 'ShipState Updated Successfully',
      'alert-type' => 'success'
    );

    return redirect()->route('all.state')->with($notification);
  } // End Method 

  // Stateの削除処理のコントローラー
  public function DeleteState($id)
  {
    ShipState::findOrFail($id)->delete();

    $notification = array(
      'message' => 'ShipState Deleted Successfully',
      'alert-type' => 'success'
    );

    return redirect()->back()->with($notification);
  } // End Method 


/////////////////////////////////////////////////////////////////////////////////////////////////